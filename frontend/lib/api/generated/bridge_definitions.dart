// This file is a placeholder for the generated bridge definitions
// The actual definitions will be generated by flutter_rust_bridge_codegen

/// Course struct from Rust
class Course {
  final int courseId;
  final String courseName;
  final int credits;
  final String department;
  final String semesterOffered;
  final List<int> prerequisites;
  
  Course({
    required this.courseId,
    required this.courseName,
    required this.credits,
    required this.department,
    required this.semesterOffered,
    required this.prerequisites,
  });
}

/// Time slot struct from Rust
class TimeSlot {
  final String startTime;
  final String endTime;
  
  TimeSlot({
    required this.startTime,
    required this.endTime,
  });
}

/// Student preference struct from Rust
class StudentPreference {
  final String preferenceId;
  final String studentId;
  final List<TimeSlot> preferredTimes;
  final List<int> preferredCourses;
  
  StudentPreference({
    required this.preferenceId,
    required this.studentId,
    required this.preferredTimes,
    required this.preferredCourses,
  });
}

/// Scheduled course struct from Rust
class ScheduledCourse {
  final int courseId;
  final TimeSlot timeSlot;
  final String dayOfWeek;
  final String room;
  
  ScheduledCourse({
    required this.courseId,
    required this.timeSlot,
    required this.dayOfWeek,
    required this.room,
  });
}

/// Semester plan struct from Rust
class SemesterPlan {
  final String planId;
  final String studentId;
  final String semester;
  final List<ScheduledCourse> courses;
  
  SemesterPlan({
    required this.planId,
    required this.studentId,
    required this.semester,
    required this.courses,
  });
}

/// Constraint value struct from Rust
class ConstraintValue {
  final String constraintType;
  final int? maxCredits;
  final String? timeOfDay;
  final String? preferredTime;
  
  ConstraintValue({
    required this.constraintType,
    this.maxCredits,
    this.timeOfDay,
    this.preferredTime,
  });
}

/// Constraint struct from Rust
class Constraint {
  final String constraintId;
  final String studentId;
  final String constraintType;
  final ConstraintValue value;
  
  Constraint({
    required this.constraintId,
    required this.studentId,
    required this.constraintType,
    required this.value,
  });
}

/// Professor struct from Rust
class Professor {
  final String professorId;
  final String name;
  final String department;
  final String email;
  
  Professor({
    required this.professorId,
    required this.name,
    required this.department,
    required this.email,
  });
}